import * as React from 'react';
import type { Metadata } from 'next';
import { Poppins } from 'next/font/google';
import { AppRoot, Image } from '@/components';
import { ClientProfiler } from '@/components/dev';
import { PlatformThemeOrMode, PRIMARY_COLOR, TITLE } from '@/utils';

import './globals.css';

/* Core CSS required for Ionic components to work properly */
import '@ionic/core/css/core.css';

/* Basic CSS for apps built with Ionic */
import '@ionic/core/css/normalize.css';
import '@ionic/core/css/structure.css';
import '@ionic/core/css/typography.css';

import 'overlayscrollbars/overlayscrollbars.css';
import 'react-loading-skeleton/dist/skeleton.css';
import { AuthProvider } from '../context-providers/auth-context';

const poppins = Poppins({
  weight: ['400', '600', '800'],
  style: ['normal', 'italic'],
  subsets: ['latin'],
  display: 'swap',
  variable: '--ion-font-family',
  fallback: [
    '-apple-system',
    'Roboto',
    'SF Pro Text',
    'SF UI Text',
    'system-ui',
    'Noto',
    'Helvetica Neue',
    'Helvetica',
    'Arial',
    'sans-serif',
  ],
});

export const metadata: Metadata = {
  title: 'Create Next App + Ionic SSR',
  description: 'Generated by create next app',
};

const tabLabels = ['Home', 'Discover', 'Profile', 'Settings', 'More'];

export default async function RootLayout({
  onboardingView,
  children: tabView,
  secondaryView,
}: {
  onboardingView: React.ReactNode;
  children: React.ReactNode;
  secondaryView: React.ReactNode;
}) {
  const isAuthenticated = true;

  return (
    <html lang='en' className={poppins.variable}>
      <body
        className={'fixed inset-0 z-0 min-h-screen bg-cover'}
        style={{ backgroundImage: "url('/background.png')" }}
      >
        <span className={'fixed inset-0 bg-slate-900 opacity-50'} />
        <ClientProfiler enabled={false}>
          <AuthProvider>
            <AppRoot
              NavLogoComponent={
                <Image
                  alt={'Acme Logo'}
                  src={'/logo-no-background.png'}
                  width={48}
                />
              }
              headerTitle={TITLE}
              options={{
                theme: PlatformThemeOrMode.IOS,
                primaryColor: PRIMARY_COLOR,
                splitPaneLayoutDisabled: !isAuthenticated,
                dark: true,
                // dark: false,
              }}
              tabbarProps={{
                showTabbarIcons: true,
                showTabbarLabels: true,
                translucent: true,
                outline: false,
              }}
              tabLabels={tabLabels}
              isAuthenticated={isAuthenticated}
            >
              {isAuthenticated ? (
                <>
                  {tabView}
                  {secondaryView}
                </>
              ) : (
                onboardingView
              )}
            </AppRoot>
          </AuthProvider>
        </ClientProfiler>
      </body>
    </html>
  );
}
